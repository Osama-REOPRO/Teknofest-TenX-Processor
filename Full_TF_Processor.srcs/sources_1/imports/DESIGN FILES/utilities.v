function [23:0] twos_complement_24bits(input [23:0] in);
    begin
        twos_complement_24bits = ~in + 1;
    end
endfunction 



module leading_zeros_counter_comb_32bit(
    input [31:0] in,
    output reg [4:0] count
);

    // Use conditional operators to determine the count of leading zeros
    always @(*) begin
        count = (in[31] ? 5'd0 :
                (in[30] ? 5'd1 :
                (in[29] ? 5'd2 :
                (in[28] ? 5'd3 :
                (in[27] ? 5'd4 :
                (in[26] ? 5'd5 :
                (in[25] ? 5'd6 :
                (in[24] ? 5'd7 :
                (in[23] ? 5'd8 :
                (in[22] ? 5'd9 :
                (in[21] ? 5'd10 :
                (in[20] ? 5'd11 :
                (in[19] ? 5'd12 :
                (in[18] ? 5'd13 :
                (in[17] ? 5'd14 :
                (in[16] ? 5'd15 :
                (in[15] ? 5'd16 :
                (in[14] ? 5'd17 :
                (in[13] ? 5'd18 :
                (in[12] ? 5'd19 :
                (in[11] ? 5'd20 :
                (in[10] ? 5'd21 :
                (in[9] ? 5'd22 :
                (in[8] ? 5'd23 :
                (in[7] ? 5'd24 :
                (in[6] ? 5'd25 :
                (in[5] ? 5'd26 :
                (in[4] ? 5'd27 :
                (in[3] ? 5'd28 :
                (in[2] ? 5'd29 :
                (in[1] ? 5'd30 :
                (in[0] ? 5'd31 : 5'd31))))))))))))))))))))))))))))))));
    end
endmodule


module leading_zeros_counter_comb_47bit
(
    input [47:0] in,
    output reg [4:0] count
);

    // Use conditional operators to determine the count of leading zeros
    always @(in) begin
       casex(in)	// synopsys full_case parallel_case
        48'b1???????????????????????????????????????????????: count =  1;
        48'b01??????????????????????????????????????????????: count =  2;
        48'b001?????????????????????????????????????????????: count =  3;
        48'b0001????????????????????????????????????????????: count =  4;
        48'b00001???????????????????????????????????????????: count =  5;
        48'b000001??????????????????????????????????????????: count =  6;
        48'b0000001?????????????????????????????????????????: count =  7;
        48'b00000001????????????????????????????????????????: count =  8;
        48'b000000001???????????????????????????????????????: count =  9;
        48'b0000000001??????????????????????????????????????: count =  10;
        48'b00000000001?????????????????????????????????????: count =  11;
        48'b000000000001????????????????????????????????????: count =  12;
        48'b0000000000001???????????????????????????????????: count =  13;
        48'b00000000000001??????????????????????????????????: count =  14;
        48'b000000000000001?????????????????????????????????: count =  15;
        48'b0000000000000001????????????????????????????????: count =  16;
        48'b00000000000000001???????????????????????????????: count =  17;
        48'b000000000000000001??????????????????????????????: count =  18;
        48'b0000000000000000001?????????????????????????????: count =  19;
        48'b00000000000000000001????????????????????????????: count =  20;
        48'b000000000000000000001???????????????????????????: count =  21;
        48'b0000000000000000000001??????????????????????????: count =  22;
        48'b00000000000000000000001?????????????????????????: count =  23;
        48'b000000000000000000000001????????????????????????: count =  24;
        48'b0000000000000000000000001???????????????????????: count =  25;
        48'b00000000000000000000000001??????????????????????: count =  26;
        48'b000000000000000000000000001?????????????????????: count =  27;
        48'b0000000000000000000000000001????????????????????: count =  28;
        48'b00000000000000000000000000001???????????????????: count =  29;
        48'b000000000000000000000000000001??????????????????: count =  30;
        48'b0000000000000000000000000000001?????????????????: count =  31;
        48'b00000000000000000000000000000001????????????????: count =  32;
        48'b000000000000000000000000000000001???????????????: count =  33;
        48'b0000000000000000000000000000000001??????????????: count =  34;
        48'b00000000000000000000000000000000001?????????????: count =  35;
        48'b000000000000000000000000000000000001????????????: count =  36;
        48'b0000000000000000000000000000000000001???????????: count =  37;
        48'b00000000000000000000000000000000000001??????????: count =  38;
        48'b000000000000000000000000000000000000001?????????: count =  39;
        48'b0000000000000000000000000000000000000001????????: count =  40;
        48'b00000000000000000000000000000000000000001???????: count =  41;
        48'b000000000000000000000000000000000000000001??????: count =  42;
        48'b0000000000000000000000000000000000000000001?????: count =  43;
        48'b00000000000000000000000000000000000000000001????: count =  44;
        48'b000000000000000000000000000000000000000000001???: count =  45;
        48'b0000000000000000000000000000000000000000000001??: count =  46;
        48'b00000000000000000000000000000000000000000000001?: count =  47;
        48'b00000000000000000000000000000000000000000000000?: count =  48;
       endcase
    end
endmodule

